import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import * as Tabs from '@radix-ui/react-tabs';
import { lazy, Suspense } from 'react';
const RedirectsSection = lazy(() => import('../sections/RedirectsSection'));
const MetaSection = lazy(() => import('../sections/MetaSection'));
const HeadersSection = lazy(() => import('../sections/HeadersSection'));
const ContentSection = lazy(() => import('../sections/ContentSection'));
export default function EvidenceTabs({ data }) {
    return (_jsxs(Tabs.Root, { defaultValue: "overview", orientation: "horizontal", className: "card p-0 overflow-hidden", children: [_jsxs(Tabs.List, { "aria-label": "Evidence", className: "flex gap-1 border-b border-border p-2", children: [_jsx(Tabs.Trigger, { value: "overview", className: "btn btn-secondary data-[state=active]:bg-muted", children: "Overview" }), _jsx(Tabs.Trigger, { value: "ai", className: "btn btn-secondary data-[state=active]:bg-muted", children: "AI Analysis" }), _jsx(Tabs.Trigger, { value: "redirects", className: "btn btn-secondary data-[state=active]:bg-muted", children: "Redirects" }), _jsx(Tabs.Trigger, { value: "meta", className: "btn btn-secondary data-[state=active]:bg-muted", children: "DNS & SSL" }), _jsx(Tabs.Trigger, { value: "headers", className: "btn btn-secondary data-[state=active]:bg-muted", children: "Headers" }), _jsx(Tabs.Trigger, { value: "content", className: "btn btn-secondary data-[state=active]:bg-muted", children: "Content" })] }), _jsxs("div", { className: "p-4", children: [_jsx(Tabs.Content, { value: "overview", children: _jsx("div", { className: "text-sm text-gray-300", children: "Risk rationale and summary are shown above; use tabs for details." }) }), _jsx(Tabs.Content, { value: "ai", children: _jsx(Suspense, { fallback: _jsx("div", { className: "h-40 animate-pulse rounded-xl bg-muted", "aria-busy": true, children: "Loading AI analysis\u2026" }), children: _jsx(AIAnalysisSection, { data: data }) }) }), _jsx(Tabs.Content, { value: "redirects", children: _jsx(Suspense, { fallback: _jsx("div", { className: "h-40 animate-pulse rounded-xl bg-muted", "aria-busy": true, children: "Loading redirects\u2026" }), children: _jsx(RedirectsSection, { redirects: data.redirects }) }) }), _jsx(Tabs.Content, { value: "meta", children: _jsx(Suspense, { fallback: _jsx("div", { className: "h-40 animate-pulse rounded-xl bg-muted", "aria-busy": true, children: "Loading meta\u2026" }), children: _jsx(MetaSection, { ssl: data.ssl, dns: data.dns, whois: data.whois }) }) }), _jsx(Tabs.Content, { value: "headers", children: _jsx(Suspense, { fallback: _jsx("div", { className: "h-40 animate-pulse rounded-xl bg-muted", "aria-busy": true, children: "Loading headers\u2026" }), children: _jsx(HeadersSection, { headers: data.headers }) }) }), _jsx(Tabs.Content, { value: "content", children: _jsx(Suspense, { fallback: _jsx("div", { className: "h-40 animate-pulse rounded-xl bg-muted", "aria-busy": true, children: "Loading content\u2026" }), children: _jsx(ContentSection, { signals: data.contentSignals }) }) })] })] }));
}
function AIAnalysisSection({ data }) {
    return (_jsxs("div", { className: "space-y-4", children: [_jsxs("div", { className: "rounded-lg border border-border p-4", children: [_jsx("h3", { className: "text-lg font-semibold mb-3", children: "AI Phishing Detection" }), _jsxs("div", { className: "space-y-2", children: [_jsxs("div", { className: "flex items-center gap-2", children: [_jsx("span", { className: "text-sm text-gray-400", children: "Detection:" }), _jsx("span", { className: `px-2 py-1 rounded text-xs font-medium ${data.phish_detection === 'yes'
                                            ? 'bg-red-500/20 text-red-300'
                                            : data.phish_detection === 'no'
                                                ? 'bg-green-500/20 text-green-300'
                                                : 'bg-yellow-500/20 text-yellow-300'}`, children: data.phish_detection === 'yes' ? 'Phishing Detected' :
                                            data.phish_detection === 'no' ? 'Safe' : 'Unknown' })] }), data.ai_reasoning && (_jsxs("div", { children: [_jsx("span", { className: "text-sm text-gray-400", children: "Reasoning:" }), _jsx("p", { className: "text-sm mt-1", children: data.ai_reasoning })] }))] })] }), data.screenshot && (_jsxs("div", { className: "rounded-lg border border-border p-4", children: [_jsx("h3", { className: "text-lg font-semibold mb-3", children: "URL Screenshot" }), _jsxs("div", { className: "relative", children: [_jsx("img", { src: data.screenshot, alt: "URL screenshot", className: "w-full rounded border border-border", onError: (e) => {
                                    e.currentTarget.style.display = 'none';
                                    e.currentTarget.nextElementSibling?.classList.remove('hidden');
                                } }), _jsx("div", { className: "hidden text-sm text-gray-400 text-center py-4", children: "Screenshot unavailable" })] })] })), data.findings && data.findings.length > 0 && (_jsxs("div", { className: "rounded-lg border border-border p-4", children: [_jsx("h3", { className: "text-lg font-semibold mb-3", children: "AI Findings" }), _jsx("div", { className: "space-y-2", children: data.findings.map((finding) => (_jsxs("div", { className: "flex items-start gap-2", children: [_jsx("span", { className: `w-2 h-2 rounded-full mt-2 ${finding.severity === 'high' ? 'bg-red-500' :
                                        finding.severity === 'medium' ? 'bg-yellow-500' :
                                            'bg-green-500'}` }), _jsxs("div", { className: "flex-1", children: [_jsx("div", { className: "font-medium text-sm", children: finding.title }), finding.description && (_jsx("div", { className: "text-xs text-gray-400 mt-1", children: finding.description }))] })] }, finding.id))) })] }))] }));
}
